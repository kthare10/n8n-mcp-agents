# HTTP -> HTTPS redirect
server {
  listen 80;
  server_name $host;
  return 301 https://$host$request_uri;
}

server {
  listen 443 ssl http2;
  server_name $host;

  # TLS
  ssl_protocols TLSv1.2 TLSv1.3;
  ssl_certificate     /etc/ssl/public.pem;
  ssl_certificate_key /etc/ssl/private.pem;

  # Common proxy headers
  proxy_set_header Host                $host;
  proxy_set_header X-Real-IP           $remote_addr;
  proxy_set_header X-Forwarded-For     $proxy_add_x_forwarded_for;
  proxy_set_header X-Forwarded-Proto   https;

  # Increase timeouts (useful for long model pulls / executions)
  proxy_read_timeout  1800;
  proxy_connect_timeout 1800;
  proxy_send_timeout  1800;
  send_timeout        1800;


  # ---------- n8n at /n8n/ ----------
  location = /n8n { return 301 /n8n/; }
  location /n8n/ {
    proxy_pass http://n8n:5678/n8n/;   # IMPORTANT: matches N8N_PATH=/n8n/
    proxy_http_version 1.1;

    # WebSockets/SSE
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";

    proxy_buffering off;

  # CORS preflight helper (optional)
  if ($request_method = 'OPTIONS') {
    add_header 'Access-Control-Allow-Origin' '*' always;
    add_header 'Access-Control-Allow-Credentials' 'true' always;
    add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, PATCH, DELETE, OPTIONS' always;
    add_header 'Access-Control-Allow-Headers' 'DNT, User-Agent, X-Requested-With, If-Modified-Since, Cache-Control, Content-Type, Range, Authorization' always;
    add_header 'Access-Control-Max-Age' 1728000 always;
    add_header 'Content-Type' 'text/plain; charset=utf-8' always;
    add_header 'Content-Length' 0;
    return 204;
  }
  }

  # ---------- Ollama API at /ollama/ ----------
  location /ollama/ {
    proxy_pass http://$host:11434/;   # strip /ollama/ prefix
    proxy_http_version 1.1;

    # streaming/WS upgrades
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";

  # CORS preflight helper (optional)
  if ($request_method = 'OPTIONS') {
    add_header 'Access-Control-Allow-Origin' '*' always;
    add_header 'Access-Control-Allow-Credentials' 'true' always;
    add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, PATCH, DELETE, OPTIONS' always;
    add_header 'Access-Control-Allow-Headers' 'DNT, User-Agent, X-Requested-With, If-Modified-Since, Cache-Control, Content-Type, Range, Authorization' always;
    add_header 'Access-Control-Max-Age' 1728000 always;
    add_header 'Content-Type' 'text/plain; charset=utf-8' always;
    add_header 'Content-Length' 0;
    return 204;
  }
  }

  # ---------- Open WebUI at site root "/" ----------
  location / {
    proxy_pass http://$host:8080/;
    proxy_http_version 1.1;

    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";

    proxy_buffering off;
  # CORS preflight helper (optional)
  if ($request_method = 'OPTIONS') {
    add_header 'Access-Control-Allow-Origin' '*' always;
    add_header 'Access-Control-Allow-Credentials' 'true' always;
    add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, PATCH, DELETE, OPTIONS' always;
    add_header 'Access-Control-Allow-Headers' 'DNT, User-Agent, X-Requested-With, If-Modified-Since, Cache-Control, Content-Type, Range, Authorization' always;
    add_header 'Access-Control-Max-Age' 1728000 always;
    add_header 'Content-Type' 'text/plain; charset=utf-8' always;
    add_header 'Content-Length' 0;
    return 204;
  }
  }
}