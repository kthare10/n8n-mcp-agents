map $http_upgrade $connection_upgrade {
  default upgrade;
  ''      close;
}

server {
  listen 443 ssl http2 default_server;
  server_name _;  # or your real FQDN

  ssl_protocols TLSv1.2 TLSv1.3;
  ssl_certificate     /etc/ssl/public.pem;
  ssl_certificate_key /etc/ssl/private.pem;

  proxy_set_header Host              $host;
  proxy_set_header X-Real-IP         $remote_addr;
  proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
  proxy_set_header X-Forwarded-Proto https;
  proxy_read_timeout    1800;
  proxy_connect_timeout 1800;
  proxy_send_timeout    1800;
  send_timeout          1800;
  proxy_buffering       off;
  client_max_body_size  64m;

  # N8N at "/"
  location / {
    proxy_pass http://n8n:5678/;              # <— service name + port
    proxy_http_version 1.1;
    proxy_set_header Upgrade    $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
    proxy_set_header Host <REPLACE_WITH_FQDN>;
    proxy_set_header Origin https://<REPLACE_WITH_FQDN>;

    # CORS - accept all preflight OPTIONS checks
    if ($request_method = 'OPTIONS') {
        add_header 'Access-Control-Allow-Origin' 'https://<REPLACE_WITH_FQDN>';
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, PATCH, DELETE, OPTIONS';
        #
        # Custom headers and headers various browsers *should* be OK with but aren't
        #
        add_header 'Access-Control-Allow-Headers' 'DNT, User-Agent, X-Requested-With, If-Modified-Since, Cache-Control, Content-Type, Range, Authorization';
        #
        # Tell client that this pre-flight info is valid for 20 days
        #
        add_header 'Access-Control-Max-Age' 1728000;
        add_header 'Content-Type' 'text/plain; charset = utf-8';
        add_header 'Content-Length' 0;
        return 204;
    }
  }

  # Ollama at "/ollama/"
  location /ollama/ {
    proxy_pass http://ollama:11434/;          # <— service name + port
    proxy_http_version 1.1;
    proxy_set_header Upgrade    $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
  }

  # Open-WebUI at "/webui/"
  location /webui/ {
    proxy_pass http://open-webui:8080/;       # <— service name + port
    proxy_http_version 1.1;
    proxy_set_header Upgrade    $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
    proxy_set_header Host <REPLACE_WITH_FQDN>;
    proxy_set_header Origin https://<REPLACE_WITH_FQDN>;

    # CORS - accept all preflight OPTIONS checks
    if ($request_method = 'OPTIONS') {
        add_header 'Access-Control-Allow-Origin' 'https://<REPLACE_WITH_FQDN>';
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, PATCH, DELETE, OPTIONS';
        #
        # Custom headers and headers various browsers *should* be OK with but aren't
        #
        add_header 'Access-Control-Allow-Headers' 'DNT, User-Agent, X-Requested-With, If-Modified-Since, Cache-Control, Content-Type, Range, Authorization';
        #
        # Tell client that this pre-flight info is valid for 20 days
        #
        add_header 'Access-Control-Max-Age' 1728000;
        add_header 'Content-Type' 'text/plain; charset = utf-8';
        add_header 'Content-Length' 0;
        return 204;
    }
  }
}